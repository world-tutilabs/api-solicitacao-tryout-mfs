generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model HomologationStatus {
  id          Int    @id @default(autoincrement())
  description String @db.VarChar(250)


  @@map("homologation_status")
}

model Homologation {

  id              String             @id @default(uuid())
  fk_solicitation String             @unique
  solicitation    SolicitationTryout @relation(fields: [fk_solicitation], references: [id])
  created_user    String
  created_at DateTime 
  homologation_user String
  homologation_at DateTime 
  comment          String
  
  @@map("homologation")
}

model SolicitationTryout {
  id               String            @id @default(uuid())
  number_tryout    Int               @unique @default(autoincrement())
  code_sap         String            @db.VarChar(250)
  desc_product     String            @db.VarChar(250)
  client           String            @db.VarChar(250)
  programmed_date  DateTime
  reason           String            @db.VarChar(250)
  created_at       DateTime          @default(now())
  updated_at       DateTime          @default(now())
  homologation     Homologation?
  injectionProcess InjectionProcess?

  @@map("solicitation_tryout")
}

model InjectionProcess {
  id              String             @default(uuid())
  id_tryout       String             @unique
  tryout          SolicitationTryout @relation(fields: [id_tryout], references: [id])
  proc_technician String
  quantity        Int
  feedstocks      Feedstock?
  labor           Labor?
  molde           Mold?
  machine         Machine?


  @@map("injection_process")
}

model Feedstock {
  id                   String           @id @default(uuid())
  code                 String           @db.VarChar(50)
  description          String           @db.VarChar(250)
  id_injection_process String           @unique
  injection_process    InjectionProcess @relation(fields: [id_injection_process], references: [id])

  @@map("feedstock")
}

model Labor {
  id                   String           @id @default(uuid())
  description          String           @db.VarChar(250)
  amount               Int
  id_injection_process String           @unique
  injection_process    InjectionProcess @relation(fields: [id_injection_process], references: [id])

  @@map("labor")
}

model Machine {
  id                   String           @id @default(uuid())
  model                String           @db.VarChar(50)
  id_injection_process String           @unique
  injection_process    InjectionProcess @relation(fields: [id_injection_process], references: [id])

  @@map("machine")
}

model Mold {
  id                   String           @id @default(uuid())
  number_cavity        Int
  desc_mold            String           @db.VarChar(250)
  id_injection_process String           @unique
  injection_process    InjectionProcess @relation(fields: [id_injection_process], references: [id])

  @@map("mold")
}
